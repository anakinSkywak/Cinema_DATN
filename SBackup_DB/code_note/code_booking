public function storeBooking(Request $request)
    {

        $user = auth()->user();
        if (!$user) {
            return response()->json([
                'message' => 'Chưa đăng nhập phải đăng nhập'
            ], 401);
        }

        // xác thực dữ liệu đầu vào
        $request->validate([
            'thongtinchieu_id' => 'required|exists:showtimes,id',
            'ma_giam_gia' => 'nullable|string|max:255',
            'magiamgia_id' => 'nullable|exists:vouchers,id',
            'doan_id' => 'nullable|exists:foods,id',
            'ghe_ngoi' => 'required|array|min:1',
            'ghe_ngoi.*' => 'required|exists:seats,id',
            'so_luong_do_an' => 'nullable|numeric|min:1',
        ]);

        // Lấy thông tin suất chiếu
        // $showtime = Showtime::with('movie')->findOrFail($request->thongtinchieu_id);

        $showtime = Showtime::with('movie')->find($request->thongtinchieu_id);
        if (!$showtime) {
            return response()->json([
                'message' => 'Suất chiếu không tồn tại.'
            ], 404);
        }

        // lấy các ghế ngồi đã chọn
        $selectedSeats = $request->ghe_ngoi;

        $seatNames = [];

        foreach ($selectedSeats as $seatId) {
            $seat = Seat::find($seatId);
            if ($seat) {
                $seatNames[] = $seat->so_ghe_ngoi;
            }
        }


        // sắp xếp các ghế ngồi đã chọn liền kề nhau
        sort($selectedSeats);

        // kiểm tra tính liền kề
        $checkSeats = true;
        for ($i = 0; $i < count($selectedSeats) - 1; $i++) {
            // check kiểm tra chọn ghế phải mỗi lần chọn phải tăng lên 1 
            // Kiểm tra nếu ghế hiện tại không liền kề với ghế tiếp theo
            if ($selectedSeats[$i] + 1 !== $selectedSeats[$i + 1]) {
                // Kiểm tra nếu không có ghế giữa hai ghế này
                if (!in_array($selectedSeats[$i] + 1, $selectedSeats)) {
                    $checkSeats = false;
                    break;
                }
            }
        }

        if (!$checkSeats) {
            return response()->json(['message' => 'Các ghế đã chọn phải liền kề nhau.'], 400);
        }


        // tính toán tính tiền đồ ăn nếu chọn
        $food = $request->doan_id ? Food::find($request->doan_id) : null;

        // nhập số lượng đồ ăn nếu nhập tính tiền theo số lượng 
        // ko nhập số lượng đồ ăn mặc định là 1 
        $so_luong_do_an = $food ? ($request->so_luong_do_an ?? 1) : 0;
        // tính giá đồ ăn 
        $gia_do_an = $food ? $food->gia * $so_luong_do_an : 0; // nếu k chọn đồ ăn thì là 0
        // Lấy tên đồ ăn (nếu có)
        $ten_do_an = $food ? $food->ten_do_an : null;


        // giá phim lấy theo phim
        $gia_ve_phim = $showtime->movie->gia_ve;

        // tính tổng giá vé dựa trên số ghế đã chọn
        $tong_gia_ve_phim = $gia_ve_phim * count($selectedSeats);

        // tính ghế theo từng ghế đã chọn vào tính tiền
        $tong_tien_ghe = 0;
        foreach ($selectedSeats as $seatID) {
            $seat = Seat::find($seatID);
            if ($seat && isset($seat->gia_ghe)) { // Kiểm tra nếu ghế tồn tại và có giá
                $tong_tien_ghe += $seat->gia_ghe; // Cộng giá của từng ghế vào tổng tiền ghế
            }
        }

        // xử lý giảm giá nếu có 


        // tính tổng tiền theo : gồm gía vé phim và tiền tổng ghế đã chọn
        $tong_tien_ve_phim = $tong_gia_ve_phim + $tong_tien_ghe;

        // tính tổng tiền theo ve phim và thêm đồ ăn
        $tong_tien = $tong_tien_ve_phim + $gia_do_an;

        // Tạo booking
        $booking = Booking::create([
            'user_id' => $user->id,
            'thongtinchieu_id' => $request->thongtinchieu_id,
            'so_luong' => count($selectedSeats),
            'doan_id' => $request->doan_id,
            'tong_tien' => $tong_tien,
            'tong_tien_thanh_toan' => $tong_tien,
            'ngay_mua' => Carbon::now(),
            'trang_thai' => 0, // chưa thanh toán
            'ghe_ngoi' => implode(', ', $seatNames),
            'so_luong_do_an' => $so_luong_do_an,
            'do_an' => $ten_do_an
        ]);

        return response()->json([
            'message' => 'Tạo booking thành công đến trang thanh toán .',
            'data' => $booking
        ], 201);
    }